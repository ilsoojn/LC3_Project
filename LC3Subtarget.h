//===-- LC3Subtarget.h - Define Subtarget for the LC3 -------*- C++ -*-===//
//
// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
// See https://llvm.org/LICENSE.txt for license information.
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
//
//===----------------------------------------------------------------------===//
//
// This file declares the LC3 specific subclass of TargetSubtargetInfo.
//
//===----------------------------------------------------------------------===//

#ifndef LLVM_LIB_TARGET_LC3_LC3SUBTARGET_H
#define LLVM_LIB_TARGET_LC3_LC3SUBTARGET_H

#include "LC3FrameLowering.h"
#include "LC3ISelLowering.h"
#include "LC3InstrInfo.h"
#include "llvm/CodeGen/SelectionDAGTargetInfo.h"
#include "llvm/CodeGen/TargetSubtargetInfo.h"
#include "llvm/IR/DataLayout.h"
#include "llvm/TargetParser/Triple.h"
#include <string>

#define GET_SUBTARGETINFO_HEADER
#include "LC3GenSubtargetInfo.inc"

namespace llvm {
class StringRef;

class LC3Subtarget : public LC3GenSubtargetInfo {
  Triple TargetTriple;
  virtual void anchor();

  bool Is64Bit;

#define GET_SUBTARGETINFO_MACRO(ATTRIBUTE, DEFAULT, GETTER)                    \
  bool ATTRIBUTE = DEFAULT;
#include "LC3GenSubtargetInfo.inc"

  LC3InstrInfo InstrInfo;
  LC3TargetLowering TLInfo;
  LC3FrameLowering FrameLowering;
  SelectionDAGTargetInfo TSInfo;

  /// ParseSubtargetFeatures - Parses features string setting specified
  /// subtarget options.  Definition of function is auto generated by tblgen.
  void ParseSubtargetFeatures(StringRef CPU, StringRef TuneCPU, StringRef FS);
  LC3Subtarget &initializeSubtargetDependencies(StringRef CPU, StringRef FS);

public:
  LC3Subtarget(const StringRef &CPU, const StringRef &FS, const TargetMachine &TM);

  const LC3RegisterInfo *getRegisterInfo() const override { return &InstrInfo.getRegisterInfo(); }
  const LC3InstrInfo *getInstrInfo() const override { return &InstrInfo; }
  const SelectionDAGTargetInfo *getSelectionDAGInfo() const override { return &TSInfo; }
  const TargetFrameLowering *getFrameLowering() const override { return &FrameLowering; }
  const LC3TargetLowering *getTargetLowering() const override { return &TLInfo; }

  bool enableMachineScheduler() const override { return true; }

#define GET_SUBTARGETINFO_MACRO(ATTRIBUTE, DEFAULT, GETTER)                    \
  bool GETTER() const { return ATTRIBUTE; }
#include "LC3GenSubtargetInfo.inc"

  bool isTargetLinux() const { return TargetTriple.isOSLinux(); }
};

} // end namespace llvm

#endif
